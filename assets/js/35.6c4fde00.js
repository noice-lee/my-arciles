(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{315:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"开课吧web高级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开课吧web高级"}},[t._v("#")]),t._v(" 开课吧web高级")]),t._v(" "),s("h2",{attrs:{id:"es6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),s("h3",{attrs:{id:"var和let-const的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var和let-const的区别"}},[t._v("#")]),t._v(" var和let/const的区别")]),t._v(" "),s("ul",[s("li",[t._v("let/const没有变量提升，有块级作用域，不会挂载到windows上")]),t._v(" "),s("li",[t._v("var有变量提升，没有块级作用域，会挂载到windows上")])]),t._v(" "),s("h3",{attrs:{id:"es6对object有哪些优化、更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6对object有哪些优化、更新"}},[t._v("#")]),t._v(" ES6对Object有哪些优化、更新")]),t._v(" "),s("ul",[s("li",[t._v("函数名和值相同时的简写，如："),s("code",[t._v("const a = { name, age }")])]),t._v(" "),s("li",[t._v("对象结构、扩展")]),t._v(" "),s("li",[s("code",[t._v("Object.assign")]),t._v("   对象合并")]),t._v(" "),s("li",[s("code",[t._v("Object.keys")]),t._v("     对象所有键名")]),t._v(" "),s("li",[s("code",[t._v("Object.values")]),t._v("   对象所有值")])]),t._v(" "),s("h3",{attrs:{id:"数组排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[t._v("#")]),t._v(" 数组排序")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正序")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("i1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 倒序")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("i1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"一些js基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些js基础"}},[t._v("#")]),t._v(" 一些js基础")]),t._v(" "),s("h3",{attrs:{id:"new的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new的特点"}},[t._v("#")]),t._v(" new的特点")]),t._v(" "),s("p",[s("code",[t._v("new 函数名")]),t._v("执行构造函数时")]),t._v(" "),s("ol",[s("li",[t._v("会"),s("strong",[t._v("默认创建一个空对象")])]),t._v(" "),s("li",[t._v("不写"),s("code",[t._v("retrun")]),t._v("会"),s("strong",[t._v("默认返回")]),t._v("这个对象")])]),t._v(" "),s("h3",{attrs:{id:"call和apply和bind的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call和apply和bind的区别"}},[t._v("#")]),t._v(" call和apply和bind的区别")]),t._v(" "),s("ul",[s("li",[t._v("call接收多个参数，第一个是指向的this，后面可传递任意个参数")]),t._v(" "),s("li",[t._v("apply接收两个参数，第一个是指向的this，第二个是参数的数组，数组里面包含想要传递的多个参数")]),t._v(" "),s("li",[t._v("bind只接收一个参数（this对应的值），返回一个函数，不会执行参数")]),t._v(" "),s("li",[t._v("定义函数时都是可直接定义多个参数")])]),t._v(" "),s("h3",{attrs:{id:"通过call-apply-bind可实现继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过call-apply-bind可实现继承"}},[t._v("#")]),t._v(" 通过call/apply/bind可实现继承")]),t._v(" "),s("p",[t._v("父构造函数中定义"),s("code",[t._v("this.方法/属性")]),t._v("，子构造函数中通过"),s("code",[t._v("父构造函数.call(this)")]),t._v("，执行父构造函数同时将"),s("code",[t._v("子构造函数的this")]),t._v("代替"),s("code",[t._v("父构造函数的this")])]),t._v(" "),s("h3",{attrs:{id:"深拷贝思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝思路"}},[t._v("#")]),t._v(" 深拷贝思路:")]),t._v(" "),s("ol",[s("li",[t._v("定义函数，接收一个参数")]),t._v(" "),s("li",[t._v("判断参数的类型，不同类型调用不同方法")]),t._v(" "),s("li",[t._v("如果是数组或者对象，循环判断，如果某项是对象或数组，则递归调用该函数，传入该项")]),t._v(" "),s("li",[t._v("如果是其他引用类型，则创建对应类型")]),t._v(" "),s("li",[t._v("如果是非引用类型，直接赋值")]),t._v(" "),s("li",[t._v("返回该参数")])])])}),[],!1,null,null,null);s.default=e.exports}}]);